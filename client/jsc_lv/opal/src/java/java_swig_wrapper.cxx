/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGJAVA


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


    /* Includes the header in the wrapper code */
    #include "opal.h"
  

typedef union {
    const char *             m_commandError;                                       
    OpalParamGeneral         m_general;                                                    
    OpalParamProtocol        m_protocol;                                                    
    OpalParamRegistration    m_registrationInfo;                                   
    OpalStatusRegistration   m_registrationStatus;                                 
    OpalParamSetUpCall       m_callSetUp;                                                                                            
    const char *             m_callToken;                                                                                                                 
    OpalStatusIncomingCall   m_incomingCall;                                       
    OpalStatusUserInput      m_userInput;                                                        
    OpalStatusMessageWaiting m_messageWaiting;                                       
    OpalStatusLineAppearance m_lineAppearance;                                       
    OpalStatusCallCleared    m_callCleared;                                       
    OpalParamCallCleared     m_clearCall;                                       
    OpalStatusMediaStream    m_mediaStream;                                                          
    OpalParamSetUserData     m_setUserData;                                       
    OpalParamRecording       m_recording;                                            
  } OpalMessage_m_param;



#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalInitialise(JNIEnv *jenv, jclass jcls, jlongArray jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  unsigned int *arg1 = (unsigned int *) 0 ;
  char *arg2 = (char *) 0 ;
  OpalHandle result;
  
  (void)jenv;
  (void)jcls;
  {
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "array null");
      return 0;
    }
    if (jenv->GetArrayLength(jarg1) == 0) {
      SWIG_JavaThrowException(jenv, SWIG_JavaIndexOutOfBoundsException, "Array must contain at least 1 element");
      return 0;
    }
    arg1 = (unsigned int *) jenv->GetLongArrayElements(jarg1, 0); 
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (OpalHandle)OpalInitialise(arg1,(char const *)arg2);
  *(OpalHandle *)&jresult = result; 
  {
    jenv->ReleaseLongArrayElements(jarg1, (jlong *)arg1, 0); 
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalShutDown(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalHandle arg1 = (OpalHandle) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalHandle *)&jarg1; 
  OpalShutDown(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalGetMessage(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  OpalHandle arg1 = (OpalHandle) 0 ;
  unsigned int arg2 ;
  OpalMessage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalHandle *)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  result = (OpalMessage *)OpalGetMessage(arg1,arg2);
  *(OpalMessage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalSendMessage(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  OpalHandle arg1 = (OpalHandle) 0 ;
  OpalMessage *arg2 = (OpalMessage *) 0 ;
  OpalMessage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalHandle *)&jarg1; 
  arg2 = *(OpalMessage **)&jarg2; 
  result = (OpalMessage *)OpalSendMessage(arg1,(OpalMessage const *)arg2);
  *(OpalMessage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalFreeMessage(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalMessage *arg1 = (OpalMessage *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalMessage **)&jarg1; 
  OpalFreeMessage(arg1);
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OPAL_1C_1API_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int) 21;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1INITIALISE_1FUNCTION_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "OpalInitialise";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1SHUTDOWN_1FUNCTION_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "OpalShutDown";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1GET_1MESSAGE_1FUNCTION_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "OpalGetMessage";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1SEND_1MESSAGE_1FUNCTION_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "OpalSendMessage";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1FREE_1MESSAGE_1FUNCTION_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "OpalFreeMessage";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1PREFIX_1H323_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "h323";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1PREFIX_1SIP_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "sip";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1PREFIX_1IAX2_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "iax2";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1PREFIX_1PCSS_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "pc";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1PREFIX_1LOCAL_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "local";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1PREFIX_1POTS_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "pots";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1PREFIX_1PSTN_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "pstn";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1PREFIX_1IVR_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "ivr";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1PREFIX_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "h323 sip iax2 pc local pots pstn ivr";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1audioRecordDevice_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_audioRecordDevice = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_audioRecordDevice, (const char *)arg2);
    } else {
      arg1->m_audioRecordDevice = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1audioRecordDevice_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_audioRecordDevice);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1audioPlayerDevice_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_audioPlayerDevice = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_audioPlayerDevice, (const char *)arg2);
    } else {
      arg1->m_audioPlayerDevice = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1audioPlayerDevice_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_audioPlayerDevice);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1videoInputDevice_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_videoInputDevice = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_videoInputDevice, (const char *)arg2);
    } else {
      arg1->m_videoInputDevice = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1videoInputDevice_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_videoInputDevice);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1videoOutputDevice_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_videoOutputDevice = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_videoOutputDevice, (const char *)arg2);
    } else {
      arg1->m_videoOutputDevice = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1videoOutputDevice_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_videoOutputDevice);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1videoPreviewDevice_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_videoPreviewDevice = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_videoPreviewDevice, (const char *)arg2);
    } else {
      arg1->m_videoPreviewDevice = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1videoPreviewDevice_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_videoPreviewDevice);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaOrder_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_mediaOrder = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_mediaOrder, (const char *)arg2);
    } else {
      arg1->m_mediaOrder = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaOrder_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_mediaOrder);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaMask_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_mediaMask = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_mediaMask, (const char *)arg2);
    } else {
      arg1->m_mediaMask = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaMask_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_mediaMask);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1autoRxMedia_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_autoRxMedia = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_autoRxMedia, (const char *)arg2);
    } else {
      arg1->m_autoRxMedia = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1autoRxMedia_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_autoRxMedia);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1autoTxMedia_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_autoTxMedia = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_autoTxMedia, (const char *)arg2);
    } else {
      arg1->m_autoTxMedia = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1autoTxMedia_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_autoTxMedia);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1natRouter_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_natRouter = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_natRouter, (const char *)arg2);
    } else {
      arg1->m_natRouter = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1natRouter_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_natRouter);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1stunServer_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_stunServer = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_stunServer, (const char *)arg2);
    } else {
      arg1->m_stunServer = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1stunServer_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_stunServer);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1tcpPortBase_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_tcpPortBase = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1tcpPortBase_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_tcpPortBase);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1tcpPortMax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_tcpPortMax = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1tcpPortMax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_tcpPortMax);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1udpPortBase_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_udpPortBase = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1udpPortBase_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_udpPortBase);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1udpPortMax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_udpPortMax = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1udpPortMax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_udpPortMax);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1rtpPortBase_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_rtpPortBase = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1rtpPortBase_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_rtpPortBase);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1rtpPortMax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_rtpPortMax = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1rtpPortMax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_rtpPortMax);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1rtpTypeOfService_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_rtpTypeOfService = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1rtpTypeOfService_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_rtpTypeOfService);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1rtpMaxPayloadSize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_rtpMaxPayloadSize = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1rtpMaxPayloadSize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_rtpMaxPayloadSize);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1minAudioJitter_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_minAudioJitter = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1minAudioJitter_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_minAudioJitter);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1maxAudioJitter_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_maxAudioJitter = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1maxAudioJitter_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_maxAudioJitter);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1silenceDetectMode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalSilenceDetectMode arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (OpalSilenceDetectMode)jarg2; 
  if (arg1) (arg1)->m_silenceDetectMode = arg2;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1silenceDetectMode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalSilenceDetectMode result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (OpalSilenceDetectMode) ((arg1)->m_silenceDetectMode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1silenceThreshold_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_silenceThreshold = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1silenceThreshold_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_silenceThreshold);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1signalDeadband_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_signalDeadband = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1signalDeadband_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_signalDeadband);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1silenceDeadband_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_silenceDeadband = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1silenceDeadband_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_silenceDeadband);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1silenceAdaptPeriod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_silenceAdaptPeriod = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1silenceAdaptPeriod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_silenceAdaptPeriod);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1echoCancellation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalEchoCancelMode arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (OpalEchoCancelMode)jarg2; 
  if (arg1) (arg1)->m_echoCancellation = arg2;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1echoCancellation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalEchoCancelMode result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (OpalEchoCancelMode) ((arg1)->m_echoCancellation);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1audioBuffers_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_audioBuffers = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1audioBuffers_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_audioBuffers);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaReadData_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataFunction arg2 = (OpalMediaDataFunction) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = *(OpalMediaDataFunction *)&jarg2; 
  if (arg1) (arg1)->m_mediaReadData = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaReadData_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataFunction result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (OpalMediaDataFunction) ((arg1)->m_mediaReadData);
  *(OpalMediaDataFunction *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaWriteData_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataFunction arg2 = (OpalMediaDataFunction) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = *(OpalMediaDataFunction *)&jarg2; 
  if (arg1) (arg1)->m_mediaWriteData = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaWriteData_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataFunction result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (OpalMediaDataFunction) ((arg1)->m_mediaWriteData);
  *(OpalMediaDataFunction *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaDataHeader_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (OpalMediaDataType)jarg2; 
  if (arg1) (arg1)->m_mediaDataHeader = arg2;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaDataHeader_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (OpalMediaDataType) ((arg1)->m_mediaDataHeader);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1messageAvailable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMessageAvailableFunction arg2 = (OpalMessageAvailableFunction) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = *(OpalMessageAvailableFunction *)&jarg2; 
  if (arg1) (arg1)->m_messageAvailable = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1messageAvailable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMessageAvailableFunction result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (OpalMessageAvailableFunction) ((arg1)->m_messageAvailable);
  *(OpalMessageAvailableFunction *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaOptions_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_mediaOptions = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_mediaOptions, (const char *)arg2);
    } else {
      arg1->m_mediaOptions = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaOptions_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (char *) ((arg1)->m_mediaOptions);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1audioBufferTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_audioBufferTime = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1audioBufferTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_audioBufferTime);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1manualAlerting_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_manualAlerting = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1manualAlerting_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (unsigned int) ((arg1)->m_manualAlerting);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaTiming_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaTiming arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  arg2 = (OpalMediaTiming)jarg2; 
  if (arg1) (arg1)->m_mediaTiming = arg2;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalParamGeneral_1m_1mediaTiming_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaTiming result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  result = (OpalMediaTiming) ((arg1)->m_mediaTiming);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalParamGeneral(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalParamGeneral *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalParamGeneral *)new OpalParamGeneral();
  *(OpalParamGeneral **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalParamGeneral(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalParamGeneral **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1vendor_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_vendor = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_vendor, (const char *)arg2);
    } else {
      arg1->m_vendor = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1vendor_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  result = (char *) ((arg1)->m_vendor);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_name, (const char *)arg2);
    } else {
      arg1->m_name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  result = (char *) ((arg1)->m_name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1version_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_version = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_version, (const char *)arg2);
    } else {
      arg1->m_version = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1version_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  result = (char *) ((arg1)->m_version);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1t35CountryCode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_t35CountryCode = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1t35CountryCode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  result = (unsigned int) ((arg1)->m_t35CountryCode);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1t35Extension_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_t35Extension = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1t35Extension_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  result = (unsigned int) ((arg1)->m_t35Extension);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1manufacturerCode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_manufacturerCode = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalProductDescription_1m_1manufacturerCode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalProductDescription **)&jarg1; 
  result = (unsigned int) ((arg1)->m_manufacturerCode);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalProductDescription(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalProductDescription *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalProductDescription *)new OpalProductDescription();
  *(OpalProductDescription **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalProductDescription(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalProductDescription **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamProtocol_1m_1prefix_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamProtocol **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_prefix = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_prefix, (const char *)arg2);
    } else {
      arg1->m_prefix = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamProtocol_1m_1prefix_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamProtocol **)&jarg1; 
  result = (char *) ((arg1)->m_prefix);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamProtocol_1m_1userName_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamProtocol **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_userName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_userName, (const char *)arg2);
    } else {
      arg1->m_userName = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamProtocol_1m_1userName_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamProtocol **)&jarg1; 
  result = (char *) ((arg1)->m_userName);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamProtocol_1m_1displayName_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamProtocol **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_displayName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_displayName, (const char *)arg2);
    } else {
      arg1->m_displayName = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamProtocol_1m_1displayName_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamProtocol **)&jarg1; 
  result = (char *) ((arg1)->m_displayName);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamProtocol_1m_1product_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  OpalProductDescription *arg2 = (OpalProductDescription *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalParamProtocol **)&jarg1; 
  arg2 = *(OpalProductDescription **)&jarg2; 
  if (arg1) (arg1)->m_product = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamProtocol_1m_1product_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  OpalProductDescription *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamProtocol **)&jarg1; 
  result = (OpalProductDescription *)& ((arg1)->m_product);
  *(OpalProductDescription **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamProtocol_1m_1interfaceAddresses_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamProtocol **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_interfaceAddresses = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_interfaceAddresses, (const char *)arg2);
    } else {
      arg1->m_interfaceAddresses = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamProtocol_1m_1interfaceAddresses_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamProtocol **)&jarg1; 
  result = (char *) ((arg1)->m_interfaceAddresses);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalParamProtocol(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalParamProtocol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalParamProtocol *)new OpalParamProtocol();
  *(OpalParamProtocol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalParamProtocol(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalParamProtocol **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1MWI_1EVENT_1PACKAGE_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "message-summary";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OPAL_1LINE_1APPEARANCE_1EVENT_1PACKAGE_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *) "dialog;sla;ma";
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1protocol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_protocol = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_protocol, (const char *)arg2);
    } else {
      arg1->m_protocol = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1protocol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  result = (char *) ((arg1)->m_protocol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1identifier_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_identifier = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_identifier, (const char *)arg2);
    } else {
      arg1->m_identifier = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1identifier_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  result = (char *) ((arg1)->m_identifier);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1hostName_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_hostName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_hostName, (const char *)arg2);
    } else {
      arg1->m_hostName = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1hostName_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  result = (char *) ((arg1)->m_hostName);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1authUserName_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_authUserName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_authUserName, (const char *)arg2);
    } else {
      arg1->m_authUserName = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1authUserName_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  result = (char *) ((arg1)->m_authUserName);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1password_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_password = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_password, (const char *)arg2);
    } else {
      arg1->m_password = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1password_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  result = (char *) ((arg1)->m_password);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1adminEntity_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_adminEntity = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_adminEntity, (const char *)arg2);
    } else {
      arg1->m_adminEntity = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1adminEntity_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  result = (char *) ((arg1)->m_adminEntity);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1timeToLive_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_timeToLive = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1timeToLive_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  result = (unsigned int) ((arg1)->m_timeToLive);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1restoreTime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_restoreTime = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1restoreTime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  result = (unsigned int) ((arg1)->m_restoreTime);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1eventPackage_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_eventPackage = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_eventPackage, (const char *)arg2);
    } else {
      arg1->m_eventPackage = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamRegistration_1m_1eventPackage_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  result = (char *) ((arg1)->m_eventPackage);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalParamRegistration(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalParamRegistration *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalParamRegistration *)new OpalParamRegistration();
  *(OpalParamRegistration **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalParamRegistration(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalParamRegistration **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusRegistration_1m_1protocol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusRegistration **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_protocol = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_protocol, (const char *)arg2);
    } else {
      arg1->m_protocol = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusRegistration_1m_1protocol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusRegistration **)&jarg1; 
  result = (char *) ((arg1)->m_protocol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusRegistration_1m_1serverName_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusRegistration **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_serverName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_serverName, (const char *)arg2);
    } else {
      arg1->m_serverName = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusRegistration_1m_1serverName_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusRegistration **)&jarg1; 
  result = (char *) ((arg1)->m_serverName);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusRegistration_1m_1error_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusRegistration **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_error = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_error, (const char *)arg2);
    } else {
      arg1->m_error = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusRegistration_1m_1error_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusRegistration **)&jarg1; 
  result = (char *) ((arg1)->m_error);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusRegistration_1m_1status_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  OpalRegistrationStates arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusRegistration **)&jarg1; 
  arg2 = (OpalRegistrationStates)jarg2; 
  if (arg1) (arg1)->m_status = arg2;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalStatusRegistration_1m_1status_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  OpalRegistrationStates result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusRegistration **)&jarg1; 
  result = (OpalRegistrationStates) ((arg1)->m_status);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusRegistration_1m_1product_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  OpalProductDescription *arg2 = (OpalProductDescription *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalStatusRegistration **)&jarg1; 
  arg2 = *(OpalProductDescription **)&jarg2; 
  if (arg1) (arg1)->m_product = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalStatusRegistration_1m_1product_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  OpalProductDescription *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusRegistration **)&jarg1; 
  result = (OpalProductDescription *)& ((arg1)->m_product);
  *(OpalProductDescription **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalStatusRegistration(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalStatusRegistration *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalStatusRegistration *)new OpalStatusRegistration();
  *(OpalStatusRegistration **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalStatusRegistration(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalStatusRegistration **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUpCall_1m_1partyA_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUpCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_partyA = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_partyA, (const char *)arg2);
    } else {
      arg1->m_partyA = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUpCall_1m_1partyA_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUpCall **)&jarg1; 
  result = (char *) ((arg1)->m_partyA);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUpCall_1m_1partyB_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUpCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_partyB = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_partyB, (const char *)arg2);
    } else {
      arg1->m_partyB = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUpCall_1m_1partyB_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUpCall **)&jarg1; 
  result = (char *) ((arg1)->m_partyB);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUpCall_1m_1callToken_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUpCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUpCall_1m_1callToken_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUpCall **)&jarg1; 
  result = (char *) ((arg1)->m_callToken);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUpCall_1m_1alertingType_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUpCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_alertingType = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_alertingType, (const char *)arg2);
    } else {
      arg1->m_alertingType = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUpCall_1m_1alertingType_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUpCall **)&jarg1; 
  result = (char *) ((arg1)->m_alertingType);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUpCall_1m_1protocolCallId_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUpCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_protocolCallId = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_protocolCallId, (const char *)arg2);
    } else {
      arg1->m_protocolCallId = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUpCall_1m_1protocolCallId_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUpCall **)&jarg1; 
  result = (char *) ((arg1)->m_protocolCallId);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalParamSetUpCall(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalParamSetUpCall *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalParamSetUpCall *)new OpalParamSetUpCall();
  *(OpalParamSetUpCall **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalParamSetUpCall(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalParamSetUpCall **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1callToken_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1callToken_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  result = (char *) ((arg1)->m_callToken);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1localAddress_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_localAddress = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_localAddress, (const char *)arg2);
    } else {
      arg1->m_localAddress = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1localAddress_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  result = (char *) ((arg1)->m_localAddress);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1remoteAddress_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_remoteAddress = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_remoteAddress, (const char *)arg2);
    } else {
      arg1->m_remoteAddress = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1remoteAddress_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  result = (char *) ((arg1)->m_remoteAddress);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1remotePartyNumber_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_remotePartyNumber = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_remotePartyNumber, (const char *)arg2);
    } else {
      arg1->m_remotePartyNumber = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1remotePartyNumber_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  result = (char *) ((arg1)->m_remotePartyNumber);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1remoteDisplayName_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_remoteDisplayName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_remoteDisplayName, (const char *)arg2);
    } else {
      arg1->m_remoteDisplayName = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1remoteDisplayName_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  result = (char *) ((arg1)->m_remoteDisplayName);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1calledAddress_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_calledAddress = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_calledAddress, (const char *)arg2);
    } else {
      arg1->m_calledAddress = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1calledAddress_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  result = (char *) ((arg1)->m_calledAddress);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1calledPartyNumber_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_calledPartyNumber = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_calledPartyNumber, (const char *)arg2);
    } else {
      arg1->m_calledPartyNumber = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1calledPartyNumber_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  result = (char *) ((arg1)->m_calledPartyNumber);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1product_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  OpalProductDescription *arg2 = (OpalProductDescription *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  arg2 = *(OpalProductDescription **)&jarg2; 
  if (arg1) (arg1)->m_product = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1product_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  OpalProductDescription *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  result = (OpalProductDescription *)& ((arg1)->m_product);
  *(OpalProductDescription **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1alertingType_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_alertingType = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_alertingType, (const char *)arg2);
    } else {
      arg1->m_alertingType = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1alertingType_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  result = (char *) ((arg1)->m_alertingType);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1protocolCallId_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_protocolCallId = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_protocolCallId, (const char *)arg2);
    } else {
      arg1->m_protocolCallId = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusIncomingCall_1m_1protocolCallId_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  result = (char *) ((arg1)->m_protocolCallId);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalStatusIncomingCall(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalStatusIncomingCall *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalStatusIncomingCall *)new OpalStatusIncomingCall();
  *(OpalStatusIncomingCall **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalStatusIncomingCall(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalStatusIncomingCall **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMediaStream_1m_1callToken_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMediaStream **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMediaStream_1m_1callToken_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMediaStream **)&jarg1; 
  result = (char *) ((arg1)->m_callToken);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMediaStream_1m_1identifier_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMediaStream **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_identifier = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_identifier, (const char *)arg2);
    } else {
      arg1->m_identifier = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMediaStream_1m_1identifier_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMediaStream **)&jarg1; 
  result = (char *) ((arg1)->m_identifier);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMediaStream_1m_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMediaStream **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_type = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_type, (const char *)arg2);
    } else {
      arg1->m_type = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMediaStream_1m_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMediaStream **)&jarg1; 
  result = (char *) ((arg1)->m_type);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMediaStream_1m_1format_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMediaStream **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_format = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_format, (const char *)arg2);
    } else {
      arg1->m_format = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMediaStream_1m_1format_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMediaStream **)&jarg1; 
  result = (char *) ((arg1)->m_format);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMediaStream_1m_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  OpalMediaStates arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMediaStream **)&jarg1; 
  arg2 = (OpalMediaStates)jarg2; 
  if (arg1) (arg1)->m_state = arg2;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMediaStream_1m_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  OpalMediaStates result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMediaStream **)&jarg1; 
  result = (OpalMediaStates) ((arg1)->m_state);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalStatusMediaStream(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalStatusMediaStream *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalStatusMediaStream *)new OpalStatusMediaStream();
  *(OpalStatusMediaStream **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalStatusMediaStream(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalStatusMediaStream **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUserData_1m_1callToken_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamSetUserData *arg1 = (OpalParamSetUserData *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUserData **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUserData_1m_1callToken_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamSetUserData *arg1 = (OpalParamSetUserData *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUserData **)&jarg1; 
  result = (char *) ((arg1)->m_callToken);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUserData_1m_1userData_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamSetUserData *arg1 = (OpalParamSetUserData *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUserData **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  if (arg1) (arg1)->m_userData = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamSetUserData_1m_1userData_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamSetUserData *arg1 = (OpalParamSetUserData *) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamSetUserData **)&jarg1; 
  result = (void *) ((arg1)->m_userData);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalParamSetUserData(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalParamSetUserData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalParamSetUserData *)new OpalParamSetUserData();
  *(OpalParamSetUserData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalParamSetUserData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalParamSetUserData *arg1 = (OpalParamSetUserData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalParamSetUserData **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusUserInput_1m_1callToken_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusUserInput **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusUserInput_1m_1callToken_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusUserInput **)&jarg1; 
  result = (char *) ((arg1)->m_callToken);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusUserInput_1m_1userInput_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusUserInput **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_userInput = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_userInput, (const char *)arg2);
    } else {
      arg1->m_userInput = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusUserInput_1m_1userInput_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusUserInput **)&jarg1; 
  result = (char *) ((arg1)->m_userInput);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusUserInput_1m_1duration_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusUserInput **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_duration = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalStatusUserInput_1m_1duration_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusUserInput **)&jarg1; 
  result = (unsigned int) ((arg1)->m_duration);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalStatusUserInput(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalStatusUserInput *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalStatusUserInput *)new OpalStatusUserInput();
  *(OpalStatusUserInput **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalStatusUserInput(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalStatusUserInput **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMessageWaiting_1m_1party_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMessageWaiting **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_party = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_party, (const char *)arg2);
    } else {
      arg1->m_party = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMessageWaiting_1m_1party_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMessageWaiting **)&jarg1; 
  result = (char *) ((arg1)->m_party);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMessageWaiting_1m_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMessageWaiting **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_type = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_type, (const char *)arg2);
    } else {
      arg1->m_type = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMessageWaiting_1m_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMessageWaiting **)&jarg1; 
  result = (char *) ((arg1)->m_type);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMessageWaiting_1m_1extraInfo_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMessageWaiting **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_extraInfo = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_extraInfo, (const char *)arg2);
    } else {
      arg1->m_extraInfo = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusMessageWaiting_1m_1extraInfo_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusMessageWaiting **)&jarg1; 
  result = (char *) ((arg1)->m_extraInfo);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalStatusMessageWaiting(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalStatusMessageWaiting *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalStatusMessageWaiting *)new OpalStatusMessageWaiting();
  *(OpalStatusMessageWaiting **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalStatusMessageWaiting(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalStatusMessageWaiting **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalLineIdle_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  OpalLineAppearanceStates result;
  
  (void)jenv;
  (void)jcls;
  result = (OpalLineAppearanceStates)OpalLineIdle;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1line_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_line = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_line, (const char *)arg2);
    } else {
      arg1->m_line = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1line_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  result = (char *) ((arg1)->m_line);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  OpalLineAppearanceStates arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  arg2 = (OpalLineAppearanceStates)jarg2; 
  if (arg1) (arg1)->m_state = arg2;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  OpalLineAppearanceStates result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  result = (OpalLineAppearanceStates) ((arg1)->m_state);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1appearance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->m_appearance = arg2;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1appearance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  result = (int) ((arg1)->m_appearance);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1callId_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_callId = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callId, (const char *)arg2);
    } else {
      arg1->m_callId = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1callId_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  result = (char *) ((arg1)->m_callId);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1partyA_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_partyA = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_partyA, (const char *)arg2);
    } else {
      arg1->m_partyA = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1partyA_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  result = (char *) ((arg1)->m_partyA);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1partyB_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_partyB = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_partyB, (const char *)arg2);
    } else {
      arg1->m_partyB = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusLineAppearance_1m_1partyB_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  result = (char *) ((arg1)->m_partyB);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalStatusLineAppearance(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalStatusLineAppearance *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalStatusLineAppearance *)new OpalStatusLineAppearance();
  *(OpalStatusLineAppearance **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalStatusLineAppearance(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalStatusLineAppearance **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1callToken_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1callToken_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  result = (char *) ((arg1)->m_callToken);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1file_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_file = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_file, (const char *)arg2);
    } else {
      arg1->m_file = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1file_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  result = (char *) ((arg1)->m_file);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1channels_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_channels = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1channels_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  result = (unsigned int) ((arg1)->m_channels);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1audioFormat_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_audioFormat = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_audioFormat, (const char *)arg2);
    } else {
      arg1->m_audioFormat = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1audioFormat_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  result = (char *) ((arg1)->m_audioFormat);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1videoFormat_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_videoFormat = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_videoFormat, (const char *)arg2);
    } else {
      arg1->m_videoFormat = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1videoFormat_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  result = (char *) ((arg1)->m_videoFormat);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1videoWidth_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_videoWidth = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1videoWidth_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  result = (unsigned int) ((arg1)->m_videoWidth);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1videoHeight_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_videoHeight = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1videoHeight_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  result = (unsigned int) ((arg1)->m_videoHeight);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1videoRate_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_videoRate = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1videoRate_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  result = (unsigned int) ((arg1)->m_videoRate);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1videoMixing_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  OpalVideoRecordMixMode arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  arg2 = (OpalVideoRecordMixMode)jarg2; 
  if (arg1) (arg1)->m_videoMixing = arg2;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalParamRecording_1m_1videoMixing_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  OpalVideoRecordMixMode result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamRecording **)&jarg1; 
  result = (OpalVideoRecordMixMode) ((arg1)->m_videoMixing);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalParamRecording(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalParamRecording *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalParamRecording *)new OpalParamRecording();
  *(OpalParamRecording **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalParamRecording(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalParamRecording **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusCallCleared_1m_1callToken_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusCallCleared *arg1 = (OpalStatusCallCleared *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusCallCleared **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusCallCleared_1m_1callToken_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusCallCleared *arg1 = (OpalStatusCallCleared *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusCallCleared **)&jarg1; 
  result = (char *) ((arg1)->m_callToken);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalStatusCallCleared_1m_1reason_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalStatusCallCleared *arg1 = (OpalStatusCallCleared *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusCallCleared **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_reason = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_reason, (const char *)arg2);
    } else {
      arg1->m_reason = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalStatusCallCleared_1m_1reason_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalStatusCallCleared *arg1 = (OpalStatusCallCleared *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalStatusCallCleared **)&jarg1; 
  result = (char *) ((arg1)->m_reason);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalStatusCallCleared(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalStatusCallCleared *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalStatusCallCleared *)new OpalStatusCallCleared();
  *(OpalStatusCallCleared **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalStatusCallCleared(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalStatusCallCleared *arg1 = (OpalStatusCallCleared *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalStatusCallCleared **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalCallEndedWithQ931Code_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  OpalCallEndReason result;
  
  (void)jenv;
  (void)jcls;
  result = (OpalCallEndReason)OpalCallEndedWithQ931Code;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamCallCleared_1m_1callToken_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalParamCallCleared *arg1 = (OpalParamCallCleared *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamCallCleared **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalParamCallCleared_1m_1callToken_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalParamCallCleared *arg1 = (OpalParamCallCleared *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamCallCleared **)&jarg1; 
  result = (char *) ((arg1)->m_callToken);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalParamCallCleared_1m_1reason_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OpalParamCallCleared *arg1 = (OpalParamCallCleared *) 0 ;
  OpalCallEndReason arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamCallCleared **)&jarg1; 
  arg2 = (OpalCallEndReason)jarg2; 
  if (arg1) (arg1)->m_reason = arg2;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalParamCallCleared_1m_1reason_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OpalParamCallCleared *arg1 = (OpalParamCallCleared *) 0 ;
  OpalCallEndReason result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalParamCallCleared **)&jarg1; 
  result = (OpalCallEndReason) ((arg1)->m_reason);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalParamCallCleared(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalParamCallCleared *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalParamCallCleared *)new OpalParamCallCleared();
  *(OpalParamCallCleared **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalParamCallCleared(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalParamCallCleared *arg1 = (OpalParamCallCleared *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalParamCallCleared **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  OpalMessage *arg1 = (OpalMessage *) 0 ;
  OpalMessageType arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalMessage **)&jarg1; 
  arg2 = (OpalMessageType)jarg2; 
  if (arg1) (arg1)->m_type = arg2;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  OpalMessage *arg1 = (OpalMessage *) 0 ;
  OpalMessageType result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalMessage **)&jarg1; 
  result = (OpalMessageType) ((arg1)->m_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1get(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  OpalMessage *arg1 = (OpalMessage *) 0 ;
  OpalMessage_m_param *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalMessage **)&jarg1; 
  result = (OpalMessage_m_param *)& ((arg1)->m_param);
  *(OpalMessage_m_param **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalMessage(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalMessage *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalMessage *)new OpalMessage();
  *(OpalMessage **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalMessage(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalMessage *arg1 = (OpalMessage *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalMessage **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1commandError_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_commandError = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_commandError, (const char *)arg2);
    } else {
      arg1->m_commandError = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1commandError_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (char *) ((arg1)->m_commandError);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1general_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamGeneral *arg2 = (OpalParamGeneral *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalParamGeneral **)&jarg2; 
  if (arg1) (arg1)->m_general = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1general_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamGeneral *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalParamGeneral *)& ((arg1)->m_general);
  *(OpalParamGeneral **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1protocol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamProtocol *arg2 = (OpalParamProtocol *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalParamProtocol **)&jarg2; 
  if (arg1) (arg1)->m_protocol = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1protocol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamProtocol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalParamProtocol *)& ((arg1)->m_protocol);
  *(OpalParamProtocol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1registrationInfo_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamRegistration *arg2 = (OpalParamRegistration *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalParamRegistration **)&jarg2; 
  if (arg1) (arg1)->m_registrationInfo = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1registrationInfo_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamRegistration *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalParamRegistration *)& ((arg1)->m_registrationInfo);
  *(OpalParamRegistration **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1registrationStatus_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusRegistration *arg2 = (OpalStatusRegistration *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalStatusRegistration **)&jarg2; 
  if (arg1) (arg1)->m_registrationStatus = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1registrationStatus_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusRegistration *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalStatusRegistration *)& ((arg1)->m_registrationStatus);
  *(OpalStatusRegistration **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1callSetUp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamSetUpCall *arg2 = (OpalParamSetUpCall *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalParamSetUpCall **)&jarg2; 
  if (arg1) (arg1)->m_callSetUp = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1callSetUp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamSetUpCall *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalParamSetUpCall *)& ((arg1)->m_callSetUp);
  *(OpalParamSetUpCall **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1callToken_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1callToken_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (char *) ((arg1)->m_callToken);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1incomingCall_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusIncomingCall *arg2 = (OpalStatusIncomingCall *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalStatusIncomingCall **)&jarg2; 
  if (arg1) (arg1)->m_incomingCall = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1incomingCall_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusIncomingCall *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalStatusIncomingCall *)& ((arg1)->m_incomingCall);
  *(OpalStatusIncomingCall **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1userInput_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusUserInput *arg2 = (OpalStatusUserInput *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalStatusUserInput **)&jarg2; 
  if (arg1) (arg1)->m_userInput = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1userInput_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusUserInput *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalStatusUserInput *)& ((arg1)->m_userInput);
  *(OpalStatusUserInput **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1messageWaiting_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusMessageWaiting *arg2 = (OpalStatusMessageWaiting *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalStatusMessageWaiting **)&jarg2; 
  if (arg1) (arg1)->m_messageWaiting = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1messageWaiting_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusMessageWaiting *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalStatusMessageWaiting *)& ((arg1)->m_messageWaiting);
  *(OpalStatusMessageWaiting **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1lineAppearance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusLineAppearance *arg2 = (OpalStatusLineAppearance *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalStatusLineAppearance **)&jarg2; 
  if (arg1) (arg1)->m_lineAppearance = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1lineAppearance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusLineAppearance *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalStatusLineAppearance *)& ((arg1)->m_lineAppearance);
  *(OpalStatusLineAppearance **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1callCleared_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusCallCleared *arg2 = (OpalStatusCallCleared *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalStatusCallCleared **)&jarg2; 
  if (arg1) (arg1)->m_callCleared = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1callCleared_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusCallCleared *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalStatusCallCleared *)& ((arg1)->m_callCleared);
  *(OpalStatusCallCleared **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1clearCall_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamCallCleared *arg2 = (OpalParamCallCleared *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalParamCallCleared **)&jarg2; 
  if (arg1) (arg1)->m_clearCall = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1clearCall_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamCallCleared *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalParamCallCleared *)& ((arg1)->m_clearCall);
  *(OpalParamCallCleared **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1mediaStream_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusMediaStream *arg2 = (OpalStatusMediaStream *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalStatusMediaStream **)&jarg2; 
  if (arg1) (arg1)->m_mediaStream = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1mediaStream_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalStatusMediaStream *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalStatusMediaStream *)& ((arg1)->m_mediaStream);
  *(OpalStatusMediaStream **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1setUserData_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamSetUserData *arg2 = (OpalParamSetUserData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalParamSetUserData **)&jarg2; 
  if (arg1) (arg1)->m_setUserData = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1setUserData_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamSetUserData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalParamSetUserData *)& ((arg1)->m_setUserData);
  *(OpalParamSetUserData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1recording_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamRecording *arg2 = (OpalParamRecording *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  arg2 = *(OpalParamRecording **)&jarg2; 
  if (arg1) (arg1)->m_recording = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessage_1m_1param_1m_1recording_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  OpalParamRecording *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  result = (OpalParamRecording *)& ((arg1)->m_recording);
  *(OpalParamRecording **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalMessage_1m_1param(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalMessage_m_param *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalMessage_m_param *)new OpalMessage_m_param();
  *(OpalMessage_m_param **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalMessage_1m_1param(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalMessage_m_param *arg1 = (OpalMessage_m_param *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalMessage_m_param **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalMessagePtr_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  OpalMessageType arg1 ;
  OpalMessagePtr *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (OpalMessageType)jarg1; 
  result = (OpalMessagePtr *)new OpalMessagePtr(arg1);
  *(OpalMessagePtr **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalMessagePtr_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalMessagePtr *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalMessagePtr *)new OpalMessagePtr();
  *(OpalMessagePtr **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalMessagePtr(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalMessageType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalMessageType)((OpalMessagePtr const *)arg1)->GetType();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1SetType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalMessageType arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  arg2 = (OpalMessageType)jarg2; 
  (arg1)->SetType(arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetCallToken(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (char *)((OpalMessagePtr const *)arg1)->GetCallToken();
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1SetCallToken(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  (arg1)->SetCallToken((char const *)arg2);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetCommandError(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (char *)((OpalMessagePtr const *)arg1)->GetCommandError();
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetGeneralParams(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamGeneral *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalParamGeneral *)((OpalMessagePtr const *)arg1)->GetGeneralParams();
  *(OpalParamGeneral **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetProtocolParams(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamProtocol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalParamProtocol *)((OpalMessagePtr const *)arg1)->GetProtocolParams();
  *(OpalParamProtocol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetRegistrationInfo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamRegistration *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalParamRegistration *)((OpalMessagePtr const *)arg1)->GetRegistrationInfo();
  *(OpalParamRegistration **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetRegistrationStatus(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusRegistration *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalStatusRegistration *)((OpalMessagePtr const *)arg1)->GetRegistrationStatus();
  *(OpalStatusRegistration **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetCallSetUp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamSetUpCall *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalParamSetUpCall *)((OpalMessagePtr const *)arg1)->GetCallSetUp();
  *(OpalParamSetUpCall **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetIncomingCall(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusIncomingCall *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalStatusIncomingCall *)((OpalMessagePtr const *)arg1)->GetIncomingCall();
  *(OpalStatusIncomingCall **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetUserInput(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusUserInput *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalStatusUserInput *)((OpalMessagePtr const *)arg1)->GetUserInput();
  *(OpalStatusUserInput **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetMessageWaiting(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusMessageWaiting *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalStatusMessageWaiting *)((OpalMessagePtr const *)arg1)->GetMessageWaiting();
  *(OpalStatusMessageWaiting **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetLineAppearance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusLineAppearance *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalStatusLineAppearance *)((OpalMessagePtr const *)arg1)->GetLineAppearance();
  *(OpalStatusLineAppearance **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetCallCleared(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusCallCleared *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalStatusCallCleared *)((OpalMessagePtr const *)arg1)->GetCallCleared();
  *(OpalStatusCallCleared **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetClearCall(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamCallCleared *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalParamCallCleared *)((OpalMessagePtr const *)arg1)->GetClearCall();
  *(OpalParamCallCleared **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetMediaStream(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusMediaStream *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalStatusMediaStream *)((OpalMessagePtr const *)arg1)->GetMediaStream();
  *(OpalStatusMediaStream **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetSetUserData(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamSetUserData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalParamSetUserData *)((OpalMessagePtr const *)arg1)->GetSetUserData();
  *(OpalParamSetUserData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalMessagePtr_1GetRecording(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamRecording *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalMessagePtr **)&jarg1; 
  result = (OpalParamRecording *)((OpalMessagePtr const *)arg1)->GetRecording();
  *(OpalParamRecording **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_new_1OpalContext(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OpalContext *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OpalContext *)new OpalContext();
  *(OpalContext **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_delete_1OpalContext(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OpalContext *arg1 = (OpalContext *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OpalContext **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1Initialise_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (unsigned int)jarg3; 
  result = (unsigned int)(arg1)->Initialise((char const *)arg2,arg3);
  jresult = (jlong)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1Initialise_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jlong jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (unsigned int)(arg1)->Initialise((char const *)arg2);
  jresult = (jlong)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1IsInitialised(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalContext **)&jarg1; 
  result = (bool)((OpalContext const *)arg1)->IsInitialised();
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1ShutDown(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  OpalContext *arg1 = (OpalContext *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalContext **)&jarg1; 
  (arg1)->ShutDown();
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1GetMessage_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  unsigned int arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = *(OpalMessagePtr **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "OpalMessagePtr & reference is null");
    return 0;
  } 
  arg3 = (unsigned int)jarg3; 
  result = (bool)(arg1)->GetMessage(*arg2,arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1GetMessage_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = *(OpalMessagePtr **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "OpalMessagePtr & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->GetMessage(*arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1SendMessage(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  OpalMessagePtr *arg3 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = *(OpalMessagePtr **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "OpalMessagePtr const & reference is null");
    return 0;
  } 
  arg3 = *(OpalMessagePtr **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "OpalMessagePtr & reference is null");
    return 0;
  } 
  result = (bool)(arg1)->SendMessage((OpalMessagePtr const &)*arg2,*arg3);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1SetUpCall_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jstring jarg3, jstring jarg4, jstring jarg5) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = *(OpalMessagePtr **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "OpalMessagePtr & reference is null");
    return 0;
  } 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return 0;
  }
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return 0;
  }
  result = (bool)(arg1)->SetUpCall(*arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  jresult = (jboolean)result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1SetUpCall_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jstring jarg3, jstring jarg4) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = *(OpalMessagePtr **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "OpalMessagePtr & reference is null");
    return 0;
  } 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return 0;
  }
  result = (bool)(arg1)->SetUpCall(*arg2,(char const *)arg3,(char const *)arg4);
  jresult = (jboolean)result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1SetUpCall_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jstring jarg3) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = *(OpalMessagePtr **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "OpalMessagePtr & reference is null");
    return 0;
  } 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (bool)(arg1)->SetUpCall(*arg2,(char const *)arg3);
  jresult = (jboolean)result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1AnswerCall(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (bool)(arg1)->AnswerCall((char const *)arg2);
  jresult = (jboolean)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1ClearCall_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  OpalCallEndReason arg3 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (OpalCallEndReason)jarg3; 
  result = (bool)(arg1)->ClearCall((char const *)arg2,arg3);
  jresult = (jboolean)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1ClearCall_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (bool)(arg1)->ClearCall((char const *)arg2);
  jresult = (jboolean)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1SendUserInput_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3, jlong jarg4) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  unsigned int arg4 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = (unsigned int)jarg4; 
  result = (bool)(arg1)->SendUserInput((char const *)arg2,(char const *)arg3,arg4);
  jresult = (jboolean)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_opalvoip_OPALJNI_OpalContext_1SendUserInput_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3) {
  jboolean jresult = 0 ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OpalContext **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (bool)(arg1)->SendUserInput((char const *)arg2,(char const *)arg3);
  jresult = (jboolean)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


#ifdef __cplusplus
}
#endif

